{"ast":null,"code":"'use client';\n\nimport { watchPendingTransactions } from '@wagmi/core';\nimport { useEffect } from 'react';\nimport { useChainId } from './useChainId.js';\nimport { useConfig } from './useConfig.js';\n/** https://wagmi.sh/react/api/hooks/useWatchPendingTransactions */\nexport function useWatchPendingTransactions() {\n  let parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    enabled = true,\n    onTransactions,\n    config: _,\n    ...rest\n  } = parameters;\n  const config = useConfig(parameters);\n  const configChainId = useChainId({\n    config\n  });\n  const chainId = parameters.chainId ?? configChainId;\n  // TODO(react@19): cleanup\n  // biome-ignore lint/correctness/useExhaustiveDependencies: `rest` changes every render so only including properties in dependency array\n  useEffect(() => {\n    if (!enabled) return;\n    if (!onTransactions) return;\n    return watchPendingTransactions(config, {\n      ...rest,\n      chainId,\n      onTransactions\n    });\n  }, [chainId, config, enabled, onTransactions,\n  ///\n  rest.batch, rest.onError, rest.poll, rest.pollingInterval, rest.syncConnectedChain]);\n}","map":{"version":3,"names":["watchPendingTransactions","useEffect","useChainId","useConfig","useWatchPendingTransactions","parameters","arguments","length","undefined","enabled","onTransactions","config","_","rest","configChainId","chainId","batch","onError","poll","pollingInterval","syncConnectedChain"],"sources":["/Users/siddharthpranay/Desktop/projects/Chirping/frontend/node_modules/wagmi/src/hooks/useWatchPendingTransactions.ts"],"sourcesContent":["'use client'\n\nimport {\n  type Config,\n  type ResolvedRegister,\n  type WatchPendingTransactionsParameters,\n  watchPendingTransactions,\n} from '@wagmi/core'\nimport type { UnionCompute, UnionExactPartial } from '@wagmi/core/internal'\nimport { useEffect } from 'react'\n\nimport type { ConfigParameter, EnabledParameter } from '../types/properties.js'\nimport { useChainId } from './useChainId.js'\nimport { useConfig } from './useConfig.js'\n\nexport type UseWatchPendingTransactionsParameters<\n  config extends Config = Config,\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n> = UnionCompute<\n  UnionExactPartial<WatchPendingTransactionsParameters<config, chainId>> &\n    ConfigParameter<config> &\n    EnabledParameter\n>\n\nexport type UseWatchPendingTransactionsReturnType = void\n\n/** https://wagmi.sh/react/api/hooks/useWatchPendingTransactions */\nexport function useWatchPendingTransactions<\n  config extends Config = ResolvedRegister['config'],\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n>(\n  parameters: UseWatchPendingTransactionsParameters<\n    config,\n    chainId\n  > = {} as any,\n): UseWatchPendingTransactionsReturnType {\n  const { enabled = true, onTransactions, config: _, ...rest } = parameters\n\n  const config = useConfig(parameters)\n  const configChainId = useChainId({ config })\n  const chainId = parameters.chainId ?? configChainId\n\n  // TODO(react@19): cleanup\n  // biome-ignore lint/correctness/useExhaustiveDependencies: `rest` changes every render so only including properties in dependency array\n  useEffect(() => {\n    if (!enabled) return\n    if (!onTransactions) return\n    return watchPendingTransactions(config, {\n      ...(rest as any),\n      chainId,\n      onTransactions,\n    })\n  }, [\n    chainId,\n    config,\n    enabled,\n    onTransactions,\n    ///\n    rest.batch,\n    rest.onError,\n    rest.poll,\n    rest.pollingInterval,\n    rest.syncConnectedChain,\n  ])\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,SAIEA,wBAAwB,QACnB,aAAa;AAEpB,SAASC,SAAS,QAAQ,OAAO;AAGjC,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,SAAS,QAAQ,gBAAgB;AAc1C;AACA,OAAM,SAAUC,2BAA2BA,CAAA,EAQ5B;EAAA,IAHbC,UAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAGI,EAAS;EAEb,MAAM;IAAEG,OAAO,GAAG,IAAI;IAAEC,cAAc;IAAEC,MAAM,EAAEC,CAAC;IAAE,GAAGC;EAAI,CAAE,GAAGR,UAAU;EAEzE,MAAMM,MAAM,GAAGR,SAAS,CAACE,UAAU,CAAC;EACpC,MAAMS,aAAa,GAAGZ,UAAU,CAAC;IAAES;EAAM,CAAE,CAAC;EAC5C,MAAMI,OAAO,GAAGV,UAAU,CAACU,OAAO,IAAID,aAAa;EAEnD;EACA;EACAb,SAAS,CAAC,MAAK;IACb,IAAI,CAACQ,OAAO,EAAE;IACd,IAAI,CAACC,cAAc,EAAE;IACrB,OAAOV,wBAAwB,CAACW,MAAM,EAAE;MACtC,GAAIE,IAAY;MAChBE,OAAO;MACPL;KACD,CAAC;EACJ,CAAC,EAAE,CACDK,OAAO,EACPJ,MAAM,EACNF,OAAO,EACPC,cAAc;EACd;EACAG,IAAI,CAACG,KAAK,EACVH,IAAI,CAACI,OAAO,EACZJ,IAAI,CAACK,IAAI,EACTL,IAAI,CAACM,eAAe,EACpBN,IAAI,CAACO,kBAAkB,CACxB,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}