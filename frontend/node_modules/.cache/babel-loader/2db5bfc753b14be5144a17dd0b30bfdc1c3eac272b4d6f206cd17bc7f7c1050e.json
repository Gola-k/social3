{"ast":null,"code":"import React from\"react\";import ReactDOM from\"react-dom\";import App from\"./App\";import\"./home.css\";// import { MoralisProvider } from \"react-moralis\";\nimport{http,createConfig,WagmiProvider}from\"wagmi\";import{bscTestnet,mainnet}from\"wagmi/chains\";import{QueryClient,QueryClientProvider}from'@tanstack/react-query';import{BrowserRouter}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";const queryClient=new QueryClient();const serverUrl=\"https://odzn6qu9o4zo.usemoralis.com:2053/server\";const appId=\"DhIkCD6RgzXux1tHt61zUUfy05Qw6YDg7P4F77TI\";// const { publicClient, webSocketPublicClient } = configureChains(\n//   [bscTestnet],\n//   [publicProvider()]\n// );\nconst config=createConfig({// autoConnect: true,\n// publicClient,\n// webSocketPublicClient,\nchains:[bscTestnet],transports:{[mainnet.id]:http(),[bscTestnet.id]:http()}});ReactDOM.render(/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(WagmiProvider,{config:config,children:/*#__PURE__*/_jsx(QueryClientProvider,{client:queryClient,children:/*#__PURE__*/_jsx(App,{})})})}),document.getElementById(\"root\"));","map":{"version":3,"names":["React","ReactDOM","App","http","createConfig","WagmiProvider","bscTestnet","mainnet","QueryClient","QueryClientProvider","BrowserRouter","jsx","_jsx","queryClient","serverUrl","appId","config","chains","transports","id","render","children","client","document","getElementById"],"sources":["/Users/siddharthpranay/Desktop/projects/Chirping/frontend/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./home.css\";\n// import { MoralisProvider } from \"react-moralis\";\n\nimport { http, createConfig, WagmiProvider } from \"wagmi\";\nimport { bscTestnet, mainnet } from \"wagmi/chains\";\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\n\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst queryClient = new QueryClient()\n\nconst serverUrl = \"https://odzn6qu9o4zo.usemoralis.com:2053/server\";\nconst appId = \"DhIkCD6RgzXux1tHt61zUUfy05Qw6YDg7P4F77TI\";\n\n// const { publicClient, webSocketPublicClient } = configureChains(\n//   [bscTestnet],\n//   [publicProvider()]\n// );\n\nconst config = createConfig({\n  // autoConnect: true,\n  // publicClient,\n  // webSocketPublicClient,\n  chains: [bscTestnet],\n  transports:{\n    [mainnet.id] : http(),\n    [bscTestnet.id] : http()\n  }\n});\n\nReactDOM.render(\n  <BrowserRouter>\n    <WagmiProvider config={config}>\n      <QueryClientProvider client={queryClient}>\n        {/* <MoralisProvider serverUrl={serverUrl} appId={appId}> */}\n          <App />\n        {/* </MoralisProvider> */}\n      </QueryClientProvider>\n    </WagmiProvider>\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,WAAW,CAChC,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,MAAO,YAAY,CACnB;AAEA,OAASC,IAAI,CAAEC,YAAY,CAAEC,aAAa,KAAQ,OAAO,CACzD,OAASC,UAAU,CAAEC,OAAO,KAAQ,cAAc,CAClD,OAASC,WAAW,CAAEC,mBAAmB,KAAQ,uBAAuB,CAGxE,OAASC,aAAa,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjD,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAL,WAAW,CAAC,CAAC,CAErC,KAAM,CAAAM,SAAS,CAAG,iDAAiD,CACnE,KAAM,CAAAC,KAAK,CAAG,0CAA0C,CAExD;AACA;AACA;AACA;AAEA,KAAM,CAAAC,MAAM,CAAGZ,YAAY,CAAC,CAC1B;AACA;AACA;AACAa,MAAM,CAAE,CAACX,UAAU,CAAC,CACpBY,UAAU,CAAC,CACT,CAACX,OAAO,CAACY,EAAE,EAAIhB,IAAI,CAAC,CAAC,CACrB,CAACG,UAAU,CAACa,EAAE,EAAIhB,IAAI,CAAC,CACzB,CACF,CAAC,CAAC,CAEFF,QAAQ,CAACmB,MAAM,cACbR,IAAA,CAACF,aAAa,EAAAW,QAAA,cACZT,IAAA,CAACP,aAAa,EAACW,MAAM,CAAEA,MAAO,CAAAK,QAAA,cAC5BT,IAAA,CAACH,mBAAmB,EAACa,MAAM,CAAET,WAAY,CAAAQ,QAAA,cAErCT,IAAA,CAACV,GAAG,GAAE,CAAC,CAEU,CAAC,CACT,CAAC,CACH,CAAC,CAEhBqB,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}