{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthpranay/Desktop/projects/Chirping/frontend/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./home.css\";\nimport { MoralisProvider } from \"react-moralis\";\nimport { http, createConfig, WagmiProvider } from \"wagmi\";\nimport { bscTestnet, mainnet } from \"wagmi/chains\";\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nconst queryClient = new QueryClient();\nimport { BrowserRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst serverUrl = \"https://odzn6qu9o4zo.usemoralis.com:2053/server\";\nconst appId = \"DhIkCD6RgzXux1tHt61zUUfy05Qw6YDg7P4F77TI\";\n\n// const { publicClient, webSocketPublicClient } = configureChains(\n//   [bscTestnet],\n//   [publicProvider()]\n// );\n\nconst config = createConfig({\n  // autoConnect: true,\n  // publicClient,\n  // webSocketPublicClient,\n  chains: [bscTestnet],\n  transports: {\n    [mainnet.id]: http(),\n    [bscTestnet.id]: http()\n  }\n});\nReactDOM.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(WagmiProvider, {\n    config: config,\n    children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n      client: queryClient,\n      children: /*#__PURE__*/_jsxDEV(MoralisProvider, {\n        serverUrl: serverUrl,\n        appId: appId,\n        children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));","map":{"version":3,"names":["React","ReactDOM","App","MoralisProvider","http","createConfig","WagmiProvider","bscTestnet","mainnet","QueryClient","QueryClientProvider","queryClient","BrowserRouter","jsxDEV","_jsxDEV","serverUrl","appId","config","chains","transports","id","render","children","client","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById"],"sources":["/Users/siddharthpranay/Desktop/projects/Chirping/frontend/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./home.css\";\nimport { MoralisProvider } from \"react-moralis\";\n\nimport { http, createConfig, WagmiProvider } from \"wagmi\";\nimport { bscTestnet, mainnet } from \"wagmi/chains\";\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\n\nconst queryClient = new QueryClient()\n\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst serverUrl = \"https://odzn6qu9o4zo.usemoralis.com:2053/server\";\nconst appId = \"DhIkCD6RgzXux1tHt61zUUfy05Qw6YDg7P4F77TI\";\n\n// const { publicClient, webSocketPublicClient } = configureChains(\n//   [bscTestnet],\n//   [publicProvider()]\n// );\n\nconst config = createConfig({\n  // autoConnect: true,\n  // publicClient,\n  // webSocketPublicClient,\n  chains: [bscTestnet],\n  transports:{\n    [mainnet.id] : http(),\n    [bscTestnet.id] : http()\n  }\n});\n\nReactDOM.render(\n  <BrowserRouter>\n    <WagmiProvider config={config}>\n      <QueryClientProvider client={queryClient}>\n        <MoralisProvider serverUrl={serverUrl} appId={appId}>\n          <App />\n        </MoralisProvider>\n      </QueryClientProvider>\n    </WagmiProvider>\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,YAAY;AACnB,SAASC,eAAe,QAAQ,eAAe;AAE/C,SAASC,IAAI,EAAEC,YAAY,EAAEC,aAAa,QAAQ,OAAO;AACzD,SAASC,UAAU,EAAEC,OAAO,QAAQ,cAAc;AAClD,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,uBAAuB;AAExE,MAAMC,WAAW,GAAG,IAAIF,WAAW,CAAC,CAAC;AAGrC,SAASG,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAG,iDAAiD;AACnE,MAAMC,KAAK,GAAG,0CAA0C;;AAExD;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAGZ,YAAY,CAAC;EAC1B;EACA;EACA;EACAa,MAAM,EAAE,CAACX,UAAU,CAAC;EACpBY,UAAU,EAAC;IACT,CAACX,OAAO,CAACY,EAAE,GAAIhB,IAAI,CAAC,CAAC;IACrB,CAACG,UAAU,CAACa,EAAE,GAAIhB,IAAI,CAAC;EACzB;AACF,CAAC,CAAC;AAEFH,QAAQ,CAACoB,MAAM,eACbP,OAAA,CAACF,aAAa;EAAAU,QAAA,eACZR,OAAA,CAACR,aAAa;IAACW,MAAM,EAAEA,MAAO;IAAAK,QAAA,eAC5BR,OAAA,CAACJ,mBAAmB;MAACa,MAAM,EAAEZ,WAAY;MAAAW,QAAA,eACvCR,OAAA,CAACX,eAAe;QAACY,SAAS,EAAEA,SAAU;QAACC,KAAK,EAAEA,KAAM;QAAAM,QAAA,eAClDR,OAAA,CAACZ,GAAG;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACH,CAAC,EAEhBC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}