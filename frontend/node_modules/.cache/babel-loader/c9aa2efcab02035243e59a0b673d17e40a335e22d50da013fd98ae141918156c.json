{"ast":null,"code":"import{useState,useCallback}from'react';import{useAccount,useConnect,useSignMessage,useDisconnect}from\"wagmi\";import{injected}from\"wagmi/connectors\";import axios from\"axios\";function useAuth(){const[user,setUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const[session,setSession]=useState({});const{connectAsync}=useConnect();const{disconnectAsync}=useDisconnect();const{isConnected}=useAccount();const{signMessageAsync}=useSignMessage();const ServerUrl=\"http://localhost:4000\";// eslint-disable-next-line react-hooks/exhaustive-deps\nconst handleAuth=async()=>{console.log(\"handle auth is called\");if(isConnected){await disconnectAsync();}// enabling the web3 provider metamask\nconst res=await connectAsync({connector:injected({target:'metaMask'})});const{accounts,chainId}=res;const userData={address:accounts[0],chain:chainId};const{data}=await axios.post(`${ServerUrl}/request-message`,userData,{headers:{\"content-type\":\"application/json\"}});const message=data.message;const signature=await signMessageAsync({message});await axios.post(`${ServerUrl}/verify`,{message,signature},{withCredentials:true}// set cookie from Express server\n);let authdataToreturn=null;axios(`${ServerUrl}/authenticate`,{withCredentials:true}).then(_ref=>{let{data}=_ref;const{iat,...authData}=data;// remove unimportant iat value\nconsole.log(\"authenticating\");setSession(authData);console.log(\"authenticating with \",authData);setUser(authData);setIsAuthenticated(true);authdataToreturn=authData;}).catch(err=>{console.log(\"error authenticating\");console.log(err);authdataToreturn=null;});return authdataToreturn;};async function signOut(){await axios(`${ServerUrl}/logout`,{withCredentials:true});}// Function to log in and set user state\nconst authenticate=/**useCallback(*/async()=>{try{await handleAuth();// console.log(\"setting user data as \", session)\n// console.log(\"user data is \", user)\n// console.log(\"isAuthenticated is \", isAuthenticated)\n// setIsAuthenticated(true);\n// console.log(\"isAuthenticated is \", isAuthenticated)s\n}catch(error){console.error('Authentication failed:',error);setIsAuthenticated(false);}};/** , [handleAuth, isAuthenticated, session, user]);*/ // Function to log out and clear user state\nconst logout=useCallback(()=>{signOut();setUser(null);setIsAuthenticated(false);},[]);return{authenticate,logout,isAuthenticated,user};}export default useAuth;","map":{"version":3,"names":["useState","useCallback","useAccount","useConnect","useSignMessage","useDisconnect","injected","axios","useAuth","user","setUser","isAuthenticated","setIsAuthenticated","session","setSession","connectAsync","disconnectAsync","isConnected","signMessageAsync","ServerUrl","handleAuth","console","log","res","connector","target","accounts","chainId","userData","address","chain","data","post","headers","message","signature","withCredentials","authdataToreturn","then","_ref","iat","authData","catch","err","signOut","authenticate","error","logout"],"sources":["/Users/siddharthpranay/Desktop/projects/Chirping/frontend/src/hooks/useAuth.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\nimport { useAccount, useConnect, useSignMessage, useDisconnect } from \"wagmi\";\nimport { injected } from \"wagmi/connectors\";\nimport axios from \"axios\";\n\nfunction useAuth() {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [session, setSession] = useState({});\n\n\n  const { connectAsync } = useConnect();\n  const { disconnectAsync } = useDisconnect();\n  const { isConnected } = useAccount();\n  const { signMessageAsync } = useSignMessage();\n\n  const ServerUrl = \"http://localhost:4000\";\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleAuth = async () => {\n\n    console.log(\"handle auth is called\");\n    if (isConnected) {\n      await disconnectAsync();\n    }\n    // enabling the web3 provider metamask\n    const res = await connectAsync({\n      connector: injected({ target: 'metaMask'}),\n    });\n\n    const { accounts, chainId } = res;\n\n    const userData = { address: accounts[0], chain: chainId };\n\n    const { data } = await axios.post(\n      `${ServerUrl}/request-message`,\n      userData,\n      {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n      }\n    );\n\n    const message = data.message;\n\n    const signature = await signMessageAsync({ message });\n\n    await axios.post(\n      `${ServerUrl}/verify`,\n      {\n        message,\n        signature,\n      },\n      { withCredentials: true } // set cookie from Express server\n    );\n\n    let authdataToreturn = null;\n\n    axios(`${ServerUrl}/authenticate`, {\n        withCredentials: true,\n      })\n        .then(({ data }) => {\n          const { iat, ...authData } = data; // remove unimportant iat value\n          console.log(\"authenticating\")\n          setSession(authData);\n          console.log(\"authenticating with \", authData)\n          setUser(authData);\n          setIsAuthenticated(true);\n          authdataToreturn = authData;\n        })\n        .catch((err) => {\n          console.log(\"error authenticating\")\n          console.log(err);\n          authdataToreturn = null;\n        });\n\n        return authdataToreturn\n  };\n\n\n  async function signOut() {\n    await axios(`${ServerUrl}/logout`, {\n      withCredentials: true,\n    });\n\n  }\n\n  // Function to log in and set user state\n  const authenticate = /**useCallback(*/async () => {\n    try {\n      await handleAuth();\n      // console.log(\"setting user data as \", session)\n      // console.log(\"user data is \", user)\n      // console.log(\"isAuthenticated is \", isAuthenticated)\n      // setIsAuthenticated(true);\n      // console.log(\"isAuthenticated is \", isAuthenticated)s\n    } catch (error) {\n      console.error('Authentication failed:', error);\n      setIsAuthenticated(false);\n    }\n  }/** , [handleAuth, isAuthenticated, session, user]);*/\n\n  // Function to log out and clear user state\n  const logout = useCallback(() => {\n    signOut();\n    setUser(null);\n    setIsAuthenticated(false);\n  }, []);\n\n  return { authenticate, logout, isAuthenticated, user };\n}\n\nexport default useAuth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}