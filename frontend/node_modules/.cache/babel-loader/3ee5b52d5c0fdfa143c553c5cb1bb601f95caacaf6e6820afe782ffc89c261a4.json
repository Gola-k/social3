{"ast":null,"code":"'use client';\n\nimport { getConnectors, watchConnectors } from '@wagmi/core';\nimport { useSyncExternalStore } from 'react';\nimport { useConfig } from './useConfig.js';\n/** https://wagmi.sh/react/api/hooks/useConnectors */\nexport function useConnectors() {\n  let parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const config = useConfig(parameters);\n  return useSyncExternalStore(onChange => watchConnectors(config, {\n    onChange\n  }), () => getConnectors(config), () => getConnectors(config));\n}","map":{"version":3,"names":["getConnectors","watchConnectors","useSyncExternalStore","useConfig","useConnectors","parameters","arguments","length","undefined","config","onChange"],"sources":["/Users/siddharthpranay/Desktop/projects/Chirping/frontend/node_modules/wagmi/src/hooks/useConnectors.ts"],"sourcesContent":["'use client'\n\nimport {\n  type GetConnectorsReturnType,\n  getConnectors,\n  watchConnectors,\n} from '@wagmi/core'\nimport { useSyncExternalStore } from 'react'\n\nimport type { ConfigParameter } from '../types/properties.js'\nimport { useConfig } from './useConfig.js'\n\nexport type UseConnectorsParameters = ConfigParameter\n\nexport type UseConnectorsReturnType = GetConnectorsReturnType\n\n/** https://wagmi.sh/react/api/hooks/useConnectors */\nexport function useConnectors(\n  parameters: UseConnectorsParameters = {},\n): UseConnectorsReturnType {\n  const config = useConfig(parameters)\n\n  return useSyncExternalStore(\n    (onChange) => watchConnectors(config, { onChange }),\n    () => getConnectors(config),\n    () => getConnectors(config),\n  )\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,SAEEA,aAAa,EACbC,eAAe,QACV,aAAa;AACpB,SAASC,oBAAoB,QAAQ,OAAO;AAG5C,SAASC,SAAS,QAAQ,gBAAgB;AAM1C;AACA,OAAM,SAAUC,aAAaA,CAAA,EACa;EAAA,IAAxCC,UAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAsC,EAAE;EAExC,MAAMG,MAAM,GAAGN,SAAS,CAACE,UAAU,CAAC;EAEpC,OAAOH,oBAAoB,CACxBQ,QAAQ,IAAKT,eAAe,CAACQ,MAAM,EAAE;IAAEC;EAAQ,CAAE,CAAC,EACnD,MAAMV,aAAa,CAACS,MAAM,CAAC,EAC3B,MAAMT,aAAa,CAACS,MAAM,CAAC,CAC5B;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}