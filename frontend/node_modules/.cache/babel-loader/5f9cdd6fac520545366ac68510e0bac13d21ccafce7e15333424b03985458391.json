{"ast":null,"code":"import{useNavigate}from\"react-router-dom\";import{useAccount,useConnect,useSignMessage,useDisconnect}from\"wagmi\";import{injected}from\"wagmi/connectors\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function SignIn(){const navigate=useNavigate();const{connectAsync}=useConnect();const{disconnectAsync}=useDisconnect();const{isConnected}=useAccount();const{signMessageAsync}=useSignMessage();const ServerUrl=\"http://localhost:4000\";const handleAuth=async()=>{//disconnects the web3 provider if it's already active\nconsole.log(\"isconnected\",isConnected);if(isConnected){await disconnectAsync();}// enabling the web3 provider metamask\nconst res=await connectAsync({connector:injected({target:'metaMask'})});const{accounts,chainId}=res;const userData={address:accounts[0],chain:chainId};console.log(userData);// making a post request to our 'request-message' endpoint\nconst{data}=await axios.post(`${ServerUrl}/request-message`,userData,{headers:{\"content-type\":\"application/json\"}});console.log(data);console.log(\"================================\");const message=data.message;console.log(message);console.log(\"================================\");// signing the received message via metamask\nconst signature=await signMessageAsync({message});console.log(signature);console.log(\"================================\");const very=await axios.post(`${ServerUrl}/verify`,{message,signature},{withCredentials:true}// set cookie from Express server\n);console.log(\"cooky========\",very);console.log(\"================================\");// redirect to /user\nnavigate(\"/user\");};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Web3 Authentication\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleAuth(),children:\"Authenticate via MetaMask\"})]});}","map":{"version":3,"names":["useNavigate","useAccount","useConnect","useSignMessage","useDisconnect","injected","axios","jsx","_jsx","jsxs","_jsxs","SignIn","navigate","connectAsync","disconnectAsync","isConnected","signMessageAsync","ServerUrl","handleAuth","console","log","res","connector","target","accounts","chainId","userData","address","chain","data","post","headers","message","signature","very","withCredentials","children","onClick"],"sources":["/Users/siddharthpranay/Desktop/projects/Chirping/frontend/src/components/Signin.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\n\nimport { useAccount, useConnect, useSignMessage, useDisconnect } from \"wagmi\";\nimport { injected } from \"wagmi/connectors\";\nimport axios from \"axios\";\n\nexport default function SignIn() {\n  const navigate = useNavigate();\n\n  const { connectAsync } = useConnect();\n  const { disconnectAsync } = useDisconnect();\n  const { isConnected } = useAccount();\n  const { signMessageAsync } = useSignMessage();\n\n  const ServerUrl = \"http://localhost:4000\";\n\n  const handleAuth = async () => {\n    //disconnects the web3 provider if it's already active\n    console.log(\"isconnected\", isConnected);\n    if (isConnected) {\n      await disconnectAsync();\n    }\n    // enabling the web3 provider metamask\n    const res = await connectAsync({\n      connector: injected({ target: 'metaMask'}),\n    });\n\n    const { accounts, chainId } = res;\n\n    const userData = { address: accounts[0], chain: chainId };\n\n    console.log(userData);\n    // making a post request to our 'request-message' endpoint\n    const { data } = await axios.post(\n      `${ServerUrl}/request-message`,\n      userData,\n      {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n      }\n    );\n\n    console.log(data);\n    console.log(\"================================\");\n    const message = data.message;\n\n    console.log(message);\n    console.log(\"================================\");\n    // signing the received message via metamask\n    const signature = await signMessageAsync({ message });\n\n    console.log(signature);\n\n    console.log(\"================================\");\n\n    const very = await axios.post(\n      `${ServerUrl}/verify`,\n      {\n        message,\n        signature,\n      },\n      { withCredentials: true } // set cookie from Express server\n    );\n\n    console.log(\"cooky========\",very);\n\n    console.log(\"================================\");\n\n    // redirect to /user\n    navigate(\"/user\");\n  };\n\n  return (\n    <div>\n      <h3>Web3 Authentication</h3>\n      <button onClick={() => handleAuth()}>Authenticate via MetaMask</button>\n    </div>\n  );\n}"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,OAASC,UAAU,CAAEC,UAAU,CAAEC,cAAc,CAAEC,aAAa,KAAQ,OAAO,CAC7E,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,cAAe,SAAS,CAAAC,MAAMA,CAAA,CAAG,CAC/B,KAAM,CAAAC,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAEa,YAAa,CAAC,CAAGX,UAAU,CAAC,CAAC,CACrC,KAAM,CAAEY,eAAgB,CAAC,CAAGV,aAAa,CAAC,CAAC,CAC3C,KAAM,CAAEW,WAAY,CAAC,CAAGd,UAAU,CAAC,CAAC,CACpC,KAAM,CAAEe,gBAAiB,CAAC,CAAGb,cAAc,CAAC,CAAC,CAE7C,KAAM,CAAAc,SAAS,CAAG,uBAAuB,CAEzC,KAAM,CAAAC,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B;AACAC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAEL,WAAW,CAAC,CACvC,GAAIA,WAAW,CAAE,CACf,KAAM,CAAAD,eAAe,CAAC,CAAC,CACzB,CACA;AACA,KAAM,CAAAO,GAAG,CAAG,KAAM,CAAAR,YAAY,CAAC,CAC7BS,SAAS,CAAEjB,QAAQ,CAAC,CAAEkB,MAAM,CAAE,UAAU,CAAC,CAC3C,CAAC,CAAC,CAEF,KAAM,CAAEC,QAAQ,CAAEC,OAAQ,CAAC,CAAGJ,GAAG,CAEjC,KAAM,CAAAK,QAAQ,CAAG,CAAEC,OAAO,CAAEH,QAAQ,CAAC,CAAC,CAAC,CAAEI,KAAK,CAAEH,OAAQ,CAAC,CAEzDN,OAAO,CAACC,GAAG,CAACM,QAAQ,CAAC,CACrB;AACA,KAAM,CAAEG,IAAK,CAAC,CAAG,KAAM,CAAAvB,KAAK,CAACwB,IAAI,CAC/B,GAAGb,SAAS,kBAAkB,CAC9BS,QAAQ,CACR,CACEK,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CACF,CAAC,CAEDZ,OAAO,CAACC,GAAG,CAACS,IAAI,CAAC,CACjBV,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC,CAC/C,KAAM,CAAAY,OAAO,CAAGH,IAAI,CAACG,OAAO,CAE5Bb,OAAO,CAACC,GAAG,CAACY,OAAO,CAAC,CACpBb,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC,CAC/C;AACA,KAAM,CAAAa,SAAS,CAAG,KAAM,CAAAjB,gBAAgB,CAAC,CAAEgB,OAAQ,CAAC,CAAC,CAErDb,OAAO,CAACC,GAAG,CAACa,SAAS,CAAC,CAEtBd,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC,CAE/C,KAAM,CAAAc,IAAI,CAAG,KAAM,CAAA5B,KAAK,CAACwB,IAAI,CAC3B,GAAGb,SAAS,SAAS,CACrB,CACEe,OAAO,CACPC,SACF,CAAC,CACD,CAAEE,eAAe,CAAE,IAAK,CAAE;AAC5B,CAAC,CAEDhB,OAAO,CAACC,GAAG,CAAC,eAAe,CAACc,IAAI,CAAC,CAEjCf,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC,CAE/C;AACAR,QAAQ,CAAC,OAAO,CAAC,CACnB,CAAC,CAED,mBACEF,KAAA,QAAA0B,QAAA,eACE5B,IAAA,OAAA4B,QAAA,CAAI,qBAAmB,CAAI,CAAC,cAC5B5B,IAAA,WAAQ6B,OAAO,CAAEA,CAAA,GAAMnB,UAAU,CAAC,CAAE,CAAAkB,QAAA,CAAC,2BAAyB,CAAQ,CAAC,EACpE,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}