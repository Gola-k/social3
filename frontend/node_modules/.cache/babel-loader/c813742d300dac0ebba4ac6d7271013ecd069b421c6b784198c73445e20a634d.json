{"ast":null,"code":"import { ChainNotConfiguredError, createConnector } from '@wagmi/core';\nimport { SwitchChainError, UserRejectedRequestError, getAddress, numberToHex } from 'viem';\ncoinbaseWallet.type = 'coinbaseWallet';\nexport function coinbaseWallet(parameters = {}) {\n  if (parameters.version === '3' || parameters.headlessMode) return version3(parameters);\n  return version4(parameters);\n}\nfunction version4(parameters) {\n  let sdk;\n  let walletProvider;\n  let accountsChanged;\n  let chainChanged;\n  let disconnect;\n  return createConnector(config => ({\n    id: 'coinbaseWalletSDK',\n    name: 'Coinbase Wallet',\n    supportsSimulation: true,\n    type: coinbaseWallet.type,\n    async connect({\n      chainId\n    } = {}) {\n      try {\n        const provider = await this.getProvider();\n        const accounts = (await provider.request({\n          method: 'eth_requestAccounts'\n        })).map(x => getAddress(x));\n        if (!accountsChanged) {\n          accountsChanged = this.onAccountsChanged.bind(this);\n          provider.on('accountsChanged', accountsChanged);\n        }\n        if (!chainChanged) {\n          chainChanged = this.onChainChanged.bind(this);\n          provider.on('chainChanged', chainChanged);\n        }\n        if (!disconnect) {\n          disconnect = this.onDisconnect.bind(this);\n          provider.on('disconnect', disconnect);\n        }\n        // Switch to chain if provided\n        let currentChainId = await this.getChainId();\n        if (chainId && currentChainId !== chainId) {\n          const chain = await this.switchChain({\n            chainId\n          }).catch(error => {\n            if (error.code === UserRejectedRequestError.code) throw error;\n            return {\n              id: currentChainId\n            };\n          });\n          currentChainId = chain?.id ?? currentChainId;\n        }\n        return {\n          accounts,\n          chainId: currentChainId\n        };\n      } catch (error) {\n        if (/(user closed modal|accounts received is empty|user denied account|request rejected)/i.test(error.message)) throw new UserRejectedRequestError(error);\n        throw error;\n      }\n    },\n    async disconnect() {\n      const provider = await this.getProvider();\n      if (accountsChanged) {\n        provider.removeListener('accountsChanged', accountsChanged);\n        accountsChanged = undefined;\n      }\n      if (chainChanged) {\n        provider.removeListener('chainChanged', chainChanged);\n        chainChanged = undefined;\n      }\n      if (disconnect) {\n        provider.removeListener('disconnect', disconnect);\n        disconnect = undefined;\n      }\n      provider.disconnect();\n      provider.close?.();\n    },\n    async getAccounts() {\n      const provider = await this.getProvider();\n      return (await provider.request({\n        method: 'eth_accounts'\n      })).map(x => getAddress(x));\n    },\n    async getChainId() {\n      const provider = await this.getProvider();\n      const chainId = await provider.request({\n        method: 'eth_chainId'\n      });\n      return Number(chainId);\n    },\n    async getProvider() {\n      if (!walletProvider) {\n        // Unwrapping import for Vite compatibility.\n        // See: https://github.com/vitejs/vite/issues/9703\n        const CoinbaseWalletSDK = await (async () => {\n          const {\n            default: SDK\n          } = await import('@coinbase/wallet-sdk');\n          if (typeof SDK !== 'function' && typeof SDK.default === 'function') return SDK.default;\n          return SDK;\n        })();\n        sdk = new CoinbaseWalletSDK({\n          ...parameters,\n          appChainIds: config.chains.map(x => x.id)\n        });\n        walletProvider = sdk.makeWeb3Provider({\n          ...parameters,\n          options: parameters.preference ?? 'all'\n        });\n      }\n      return walletProvider;\n    },\n    async isAuthorized() {\n      try {\n        const accounts = await this.getAccounts();\n        return !!accounts.length;\n      } catch {\n        return false;\n      }\n    },\n    async switchChain({\n      addEthereumChainParameter,\n      chainId\n    }) {\n      const chain = config.chains.find(chain => chain.id === chainId);\n      if (!chain) throw new SwitchChainError(new ChainNotConfiguredError());\n      const provider = await this.getProvider();\n      try {\n        await provider.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: numberToHex(chain.id)\n          }]\n        });\n        return chain;\n      } catch (error) {\n        // Indicates chain is not added to provider\n        if (error.code === 4902) {\n          try {\n            let blockExplorerUrls;\n            if (addEthereumChainParameter?.blockExplorerUrls) blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls;else blockExplorerUrls = chain.blockExplorers?.default.url ? [chain.blockExplorers?.default.url] : [];\n            let rpcUrls;\n            if (addEthereumChainParameter?.rpcUrls?.length) rpcUrls = addEthereumChainParameter.rpcUrls;else rpcUrls = [chain.rpcUrls.default?.http[0] ?? ''];\n            const addEthereumChain = {\n              blockExplorerUrls,\n              chainId: numberToHex(chainId),\n              chainName: addEthereumChainParameter?.chainName ?? chain.name,\n              iconUrls: addEthereumChainParameter?.iconUrls,\n              nativeCurrency: addEthereumChainParameter?.nativeCurrency ?? chain.nativeCurrency,\n              rpcUrls\n            };\n            await provider.request({\n              method: 'wallet_addEthereumChain',\n              params: [addEthereumChain]\n            });\n            return chain;\n          } catch (error) {\n            throw new UserRejectedRequestError(error);\n          }\n        }\n        throw new SwitchChainError(error);\n      }\n    },\n    onAccountsChanged(accounts) {\n      if (accounts.length === 0) this.onDisconnect();else config.emitter.emit('change', {\n        accounts: accounts.map(x => getAddress(x))\n      });\n    },\n    onChainChanged(chain) {\n      const chainId = Number(chain);\n      config.emitter.emit('change', {\n        chainId\n      });\n    },\n    async onDisconnect(_error) {\n      config.emitter.emit('disconnect');\n      const provider = await this.getProvider();\n      if (accountsChanged) {\n        provider.removeListener('accountsChanged', accountsChanged);\n        accountsChanged = undefined;\n      }\n      if (chainChanged) {\n        provider.removeListener('chainChanged', chainChanged);\n        chainChanged = undefined;\n      }\n      if (disconnect) {\n        provider.removeListener('disconnect', disconnect);\n        disconnect = undefined;\n      }\n    }\n  }));\n}\nfunction version3(parameters) {\n  const reloadOnDisconnect = false;\n  let sdk;\n  let walletProvider;\n  let accountsChanged;\n  let chainChanged;\n  let disconnect;\n  return createConnector(config => ({\n    id: 'coinbaseWalletSDK',\n    name: 'Coinbase Wallet',\n    supportsSimulation: true,\n    type: coinbaseWallet.type,\n    async connect({\n      chainId\n    } = {}) {\n      try {\n        const provider = await this.getProvider();\n        const accounts = (await provider.request({\n          method: 'eth_requestAccounts'\n        })).map(x => getAddress(x));\n        if (!accountsChanged) {\n          accountsChanged = this.onAccountsChanged.bind(this);\n          provider.on('accountsChanged', accountsChanged);\n        }\n        if (!chainChanged) {\n          chainChanged = this.onChainChanged.bind(this);\n          provider.on('chainChanged', chainChanged);\n        }\n        if (!disconnect) {\n          disconnect = this.onDisconnect.bind(this);\n          provider.on('disconnect', disconnect);\n        }\n        // Switch to chain if provided\n        let currentChainId = await this.getChainId();\n        if (chainId && currentChainId !== chainId) {\n          const chain = await this.switchChain({\n            chainId\n          }).catch(error => {\n            if (error.code === UserRejectedRequestError.code) throw error;\n            return {\n              id: currentChainId\n            };\n          });\n          currentChainId = chain?.id ?? currentChainId;\n        }\n        return {\n          accounts,\n          chainId: currentChainId\n        };\n      } catch (error) {\n        if (/(user closed modal|accounts received is empty|user denied account)/i.test(error.message)) throw new UserRejectedRequestError(error);\n        throw error;\n      }\n    },\n    async disconnect() {\n      const provider = await this.getProvider();\n      if (accountsChanged) {\n        provider.removeListener('accountsChanged', accountsChanged);\n        accountsChanged = undefined;\n      }\n      if (chainChanged) {\n        provider.removeListener('chainChanged', chainChanged);\n        chainChanged = undefined;\n      }\n      if (disconnect) {\n        provider.removeListener('disconnect', disconnect);\n        disconnect = undefined;\n      }\n      provider.disconnect();\n      provider.close();\n    },\n    async getAccounts() {\n      const provider = await this.getProvider();\n      return (await provider.request({\n        method: 'eth_accounts'\n      })).map(x => getAddress(x));\n    },\n    async getChainId() {\n      const provider = await this.getProvider();\n      const chainId = await provider.request({\n        method: 'eth_chainId'\n      });\n      return Number(chainId);\n    },\n    async getProvider() {\n      if (!walletProvider) {\n        // Unwrapping import for Vite compatibility.\n        // See: https://github.com/vitejs/vite/issues/9703\n        const CoinbaseWalletSDK = await (async () => {\n          const {\n            default: SDK\n          } = await import('cbw-sdk');\n          if (typeof SDK !== 'function' && typeof SDK.default === 'function') return SDK.default;\n          return SDK;\n        })();\n        sdk = new CoinbaseWalletSDK({\n          ...parameters,\n          reloadOnDisconnect\n        });\n        // Force types to retrieve private `walletExtension` method from the Coinbase Wallet SDK.\n        const walletExtensionChainId = sdk.walletExtension?.getChainId();\n        const chain = config.chains.find(chain => parameters.chainId ? chain.id === parameters.chainId : chain.id === walletExtensionChainId) || config.chains[0];\n        const chainId = parameters.chainId || chain?.id;\n        const jsonRpcUrl = parameters.jsonRpcUrl || chain?.rpcUrls.default.http[0];\n        walletProvider = sdk.makeWeb3Provider(jsonRpcUrl, chainId);\n      }\n      return walletProvider;\n    },\n    async isAuthorized() {\n      try {\n        const accounts = await this.getAccounts();\n        return !!accounts.length;\n      } catch {\n        return false;\n      }\n    },\n    async switchChain({\n      addEthereumChainParameter,\n      chainId\n    }) {\n      const chain = config.chains.find(chain => chain.id === chainId);\n      if (!chain) throw new SwitchChainError(new ChainNotConfiguredError());\n      const provider = await this.getProvider();\n      try {\n        await provider.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: numberToHex(chain.id)\n          }]\n        });\n        return chain;\n      } catch (error) {\n        // Indicates chain is not added to provider\n        if (error.code === 4902) {\n          try {\n            let blockExplorerUrls;\n            if (addEthereumChainParameter?.blockExplorerUrls) blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls;else blockExplorerUrls = chain.blockExplorers?.default.url ? [chain.blockExplorers?.default.url] : [];\n            let rpcUrls;\n            if (addEthereumChainParameter?.rpcUrls?.length) rpcUrls = addEthereumChainParameter.rpcUrls;else rpcUrls = [chain.rpcUrls.default?.http[0] ?? ''];\n            const addEthereumChain = {\n              blockExplorerUrls,\n              chainId: numberToHex(chainId),\n              chainName: addEthereumChainParameter?.chainName ?? chain.name,\n              iconUrls: addEthereumChainParameter?.iconUrls,\n              nativeCurrency: addEthereumChainParameter?.nativeCurrency ?? chain.nativeCurrency,\n              rpcUrls\n            };\n            await provider.request({\n              method: 'wallet_addEthereumChain',\n              params: [addEthereumChain]\n            });\n            return chain;\n          } catch (error) {\n            throw new UserRejectedRequestError(error);\n          }\n        }\n        throw new SwitchChainError(error);\n      }\n    },\n    onAccountsChanged(accounts) {\n      if (accounts.length === 0) this.onDisconnect();else config.emitter.emit('change', {\n        accounts: accounts.map(x => getAddress(x))\n      });\n    },\n    onChainChanged(chain) {\n      const chainId = Number(chain);\n      config.emitter.emit('change', {\n        chainId\n      });\n    },\n    async onDisconnect(_error) {\n      config.emitter.emit('disconnect');\n      const provider = await this.getProvider();\n      if (accountsChanged) {\n        provider.removeListener('accountsChanged', accountsChanged);\n        accountsChanged = undefined;\n      }\n      if (chainChanged) {\n        provider.removeListener('chainChanged', chainChanged);\n        chainChanged = undefined;\n      }\n      if (disconnect) {\n        provider.removeListener('disconnect', disconnect);\n        disconnect = undefined;\n      }\n    }\n  }));\n}","map":{"version":3,"names":["ChainNotConfiguredError","createConnector","SwitchChainError","UserRejectedRequestError","getAddress","numberToHex","coinbaseWallet","type","parameters","version","headlessMode","version3","version4","sdk","walletProvider","accountsChanged","chainChanged","disconnect","config","id","name","supportsSimulation","connect","chainId","provider","getProvider","accounts","request","method","map","x","onAccountsChanged","bind","on","onChainChanged","onDisconnect","currentChainId","getChainId","chain","switchChain","catch","error","code","test","message","removeListener","undefined","close","getAccounts","Number","CoinbaseWalletSDK","default","SDK","appChainIds","chains","makeWeb3Provider","options","preference","isAuthorized","length","addEthereumChainParameter","find","params","blockExplorerUrls","blockExplorers","url","rpcUrls","http","addEthereumChain","chainName","iconUrls","nativeCurrency","emitter","emit","_error","reloadOnDisconnect","walletExtensionChainId","walletExtension","jsonRpcUrl"],"sources":["/Users/siddharthpranay/Desktop/projects/Chirping/frontend/node_modules/@wagmi/connectors/src/coinbaseWallet.ts"],"sourcesContent":["import type {\n  CoinbaseWalletSDK,\n  Preference,\n  ProviderInterface,\n} from '@coinbase/wallet-sdk'\nimport {\n  ChainNotConfiguredError,\n  type Connector,\n  createConnector,\n} from '@wagmi/core'\nimport type { Compute, Mutable, Omit } from '@wagmi/core/internal'\nimport type {\n  CoinbaseWalletProvider as CBW_Provider,\n  CoinbaseWalletSDK as CBW_SDK,\n} from 'cbw-sdk'\nimport {\n  type AddEthereumChainParameter,\n  type Hex,\n  type ProviderRpcError,\n  SwitchChainError,\n  UserRejectedRequestError,\n  getAddress,\n  numberToHex,\n} from 'viem'\n\ntype Version = '3' | '4'\n\nexport type CoinbaseWalletParameters<version extends Version = '3'> =\n  version extends '4'\n    ? Compute<\n        {\n          headlessMode?: false | undefined\n          /** Coinbase Wallet SDK version */\n          version?: version | '3' | undefined\n        } & Version4Parameters\n      >\n    : Compute<\n        {\n          /**\n           * @deprecated `headlessMode` will be removed in the next major version. Upgrade to `version: '4'`.\n           */\n          headlessMode?: true | undefined\n          /**\n           * Coinbase Wallet SDK version\n           * @deprecated Version 3 will be removed in the next major version. Upgrade to `version: '4'`.\n           * @default '4'\n           */\n          version?: version | '4' | undefined\n        } & Version3Parameters\n      >\n\ncoinbaseWallet.type = 'coinbaseWallet' as const\nexport function coinbaseWallet<version extends Version>(\n  parameters: CoinbaseWalletParameters<version> = {} as any,\n): version extends '4'\n  ? ReturnType<typeof version4>\n  : ReturnType<typeof version3> {\n  if (parameters.version === '3' || parameters.headlessMode)\n    return version3(parameters as Version3Parameters) as any\n  return version4(parameters as Version4Parameters) as any\n}\n\ntype Version4Parameters = Mutable<\n  Omit<\n    ConstructorParameters<typeof CoinbaseWalletSDK>[0],\n    'appChainIds' // set via wagmi config\n  > & {\n    /**\n     * Preference for the type of wallet to display.\n     * @default 'all'\n     */\n    preference?: Preference['options'] | undefined\n  }\n>\n\nfunction version4(parameters: Version4Parameters) {\n  type Provider = ProviderInterface & {\n    // for backwards compatibility\n    close?(): void\n  }\n\n  let sdk: CoinbaseWalletSDK | undefined\n  let walletProvider: Provider | undefined\n\n  let accountsChanged: Connector['onAccountsChanged'] | undefined\n  let chainChanged: Connector['onChainChanged'] | undefined\n  let disconnect: Connector['onDisconnect'] | undefined\n\n  return createConnector<Provider>((config) => ({\n    id: 'coinbaseWalletSDK',\n    name: 'Coinbase Wallet',\n    supportsSimulation: true,\n    type: coinbaseWallet.type,\n    async connect({ chainId } = {}) {\n      try {\n        const provider = await this.getProvider()\n        const accounts = (\n          (await provider.request({\n            method: 'eth_requestAccounts',\n          })) as string[]\n        ).map((x) => getAddress(x))\n\n        if (!accountsChanged) {\n          accountsChanged = this.onAccountsChanged.bind(this)\n          provider.on('accountsChanged', accountsChanged)\n        }\n        if (!chainChanged) {\n          chainChanged = this.onChainChanged.bind(this)\n          provider.on('chainChanged', chainChanged)\n        }\n        if (!disconnect) {\n          disconnect = this.onDisconnect.bind(this)\n          provider.on('disconnect', disconnect)\n        }\n\n        // Switch to chain if provided\n        let currentChainId = await this.getChainId()\n        if (chainId && currentChainId !== chainId) {\n          const chain = await this.switchChain!({ chainId }).catch((error) => {\n            if (error.code === UserRejectedRequestError.code) throw error\n            return { id: currentChainId }\n          })\n          currentChainId = chain?.id ?? currentChainId\n        }\n\n        return { accounts, chainId: currentChainId }\n      } catch (error) {\n        if (\n          /(user closed modal|accounts received is empty|user denied account|request rejected)/i.test(\n            (error as Error).message,\n          )\n        )\n          throw new UserRejectedRequestError(error as Error)\n        throw error\n      }\n    },\n    async disconnect() {\n      const provider = await this.getProvider()\n\n      if (accountsChanged) {\n        provider.removeListener('accountsChanged', accountsChanged)\n        accountsChanged = undefined\n      }\n      if (chainChanged) {\n        provider.removeListener('chainChanged', chainChanged)\n        chainChanged = undefined\n      }\n      if (disconnect) {\n        provider.removeListener('disconnect', disconnect)\n        disconnect = undefined\n      }\n\n      provider.disconnect()\n      provider.close?.()\n    },\n    async getAccounts() {\n      const provider = await this.getProvider()\n      return (\n        await provider.request<string[]>({\n          method: 'eth_accounts',\n        })\n      ).map((x) => getAddress(x))\n    },\n    async getChainId() {\n      const provider = await this.getProvider()\n      const chainId = await provider.request<Hex>({\n        method: 'eth_chainId',\n      })\n      return Number(chainId)\n    },\n    async getProvider() {\n      if (!walletProvider) {\n        // Unwrapping import for Vite compatibility.\n        // See: https://github.com/vitejs/vite/issues/9703\n        const CoinbaseWalletSDK = await (async () => {\n          const { default: SDK } = await import('@coinbase/wallet-sdk')\n          if (typeof SDK !== 'function' && typeof SDK.default === 'function')\n            return SDK.default\n          return SDK as unknown as typeof SDK.default\n        })()\n\n        sdk = new CoinbaseWalletSDK({\n          ...parameters,\n          appChainIds: config.chains.map((x) => x.id),\n        })\n\n        walletProvider = sdk.makeWeb3Provider({\n          ...parameters,\n          options: parameters.preference ?? 'all',\n        })\n      }\n\n      return walletProvider\n    },\n    async isAuthorized() {\n      try {\n        const accounts = await this.getAccounts()\n        return !!accounts.length\n      } catch {\n        return false\n      }\n    },\n    async switchChain({ addEthereumChainParameter, chainId }) {\n      const chain = config.chains.find((chain) => chain.id === chainId)\n      if (!chain) throw new SwitchChainError(new ChainNotConfiguredError())\n\n      const provider = await this.getProvider()\n\n      try {\n        await provider.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{ chainId: numberToHex(chain.id) }],\n        })\n        return chain\n      } catch (error) {\n        // Indicates chain is not added to provider\n        if ((error as ProviderRpcError).code === 4902) {\n          try {\n            let blockExplorerUrls: string[] | undefined\n            if (addEthereumChainParameter?.blockExplorerUrls)\n              blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls\n            else\n              blockExplorerUrls = chain.blockExplorers?.default.url\n                ? [chain.blockExplorers?.default.url]\n                : []\n\n            let rpcUrls: readonly string[]\n            if (addEthereumChainParameter?.rpcUrls?.length)\n              rpcUrls = addEthereumChainParameter.rpcUrls\n            else rpcUrls = [chain.rpcUrls.default?.http[0] ?? '']\n\n            const addEthereumChain = {\n              blockExplorerUrls,\n              chainId: numberToHex(chainId),\n              chainName: addEthereumChainParameter?.chainName ?? chain.name,\n              iconUrls: addEthereumChainParameter?.iconUrls,\n              nativeCurrency:\n                addEthereumChainParameter?.nativeCurrency ??\n                chain.nativeCurrency,\n              rpcUrls,\n            } satisfies AddEthereumChainParameter\n\n            await provider.request({\n              method: 'wallet_addEthereumChain',\n              params: [addEthereumChain],\n            })\n\n            return chain\n          } catch (error) {\n            throw new UserRejectedRequestError(error as Error)\n          }\n        }\n\n        throw new SwitchChainError(error as Error)\n      }\n    },\n    onAccountsChanged(accounts) {\n      if (accounts.length === 0) this.onDisconnect()\n      else\n        config.emitter.emit('change', {\n          accounts: accounts.map((x) => getAddress(x)),\n        })\n    },\n    onChainChanged(chain) {\n      const chainId = Number(chain)\n      config.emitter.emit('change', { chainId })\n    },\n    async onDisconnect(_error) {\n      config.emitter.emit('disconnect')\n\n      const provider = await this.getProvider()\n      if (accountsChanged) {\n        provider.removeListener('accountsChanged', accountsChanged)\n        accountsChanged = undefined\n      }\n      if (chainChanged) {\n        provider.removeListener('chainChanged', chainChanged)\n        chainChanged = undefined\n      }\n      if (disconnect) {\n        provider.removeListener('disconnect', disconnect)\n        disconnect = undefined\n      }\n    },\n  }))\n}\n\ntype Version3Parameters = Mutable<\n  Omit<\n    ConstructorParameters<typeof CBW_SDK>[0],\n    'reloadOnDisconnect' // remove property since TSDoc says default is `true`\n  >\n> & {\n  /**\n   * Fallback Ethereum JSON RPC URL\n   * @default \"\"\n   */\n  jsonRpcUrl?: string | undefined\n  /**\n   * Fallback Ethereum Chain ID\n   * @default 1\n   */\n  chainId?: number | undefined\n  /**\n   * Whether or not to reload dapp automatically after disconnect.\n   * @default false\n   */\n  reloadOnDisconnect?: boolean | undefined\n}\n\nfunction version3(parameters: Version3Parameters) {\n  const reloadOnDisconnect = false\n\n  type Provider = CBW_Provider\n\n  let sdk: CBW_SDK | undefined\n  let walletProvider: Provider | undefined\n\n  let accountsChanged: Connector['onAccountsChanged'] | undefined\n  let chainChanged: Connector['onChainChanged'] | undefined\n  let disconnect: Connector['onDisconnect'] | undefined\n\n  return createConnector<Provider>((config) => ({\n    id: 'coinbaseWalletSDK',\n    name: 'Coinbase Wallet',\n    supportsSimulation: true,\n    type: coinbaseWallet.type,\n    async connect({ chainId } = {}) {\n      try {\n        const provider = await this.getProvider()\n        const accounts = (\n          (await provider.request({\n            method: 'eth_requestAccounts',\n          })) as string[]\n        ).map((x) => getAddress(x))\n\n        if (!accountsChanged) {\n          accountsChanged = this.onAccountsChanged.bind(this)\n          provider.on('accountsChanged', accountsChanged)\n        }\n        if (!chainChanged) {\n          chainChanged = this.onChainChanged.bind(this)\n          provider.on('chainChanged', chainChanged)\n        }\n        if (!disconnect) {\n          disconnect = this.onDisconnect.bind(this)\n          provider.on('disconnect', disconnect)\n        }\n\n        // Switch to chain if provided\n        let currentChainId = await this.getChainId()\n        if (chainId && currentChainId !== chainId) {\n          const chain = await this.switchChain!({ chainId }).catch((error) => {\n            if (error.code === UserRejectedRequestError.code) throw error\n            return { id: currentChainId }\n          })\n          currentChainId = chain?.id ?? currentChainId\n        }\n\n        return { accounts, chainId: currentChainId }\n      } catch (error) {\n        if (\n          /(user closed modal|accounts received is empty|user denied account)/i.test(\n            (error as Error).message,\n          )\n        )\n          throw new UserRejectedRequestError(error as Error)\n        throw error\n      }\n    },\n    async disconnect() {\n      const provider = await this.getProvider()\n\n      if (accountsChanged) {\n        provider.removeListener('accountsChanged', accountsChanged)\n        accountsChanged = undefined\n      }\n      if (chainChanged) {\n        provider.removeListener('chainChanged', chainChanged)\n        chainChanged = undefined\n      }\n      if (disconnect) {\n        provider.removeListener('disconnect', disconnect)\n        disconnect = undefined\n      }\n\n      provider.disconnect()\n      provider.close()\n    },\n    async getAccounts() {\n      const provider = await this.getProvider()\n      return (\n        await provider.request<string[]>({\n          method: 'eth_accounts',\n        })\n      ).map((x) => getAddress(x))\n    },\n    async getChainId() {\n      const provider = await this.getProvider()\n      const chainId = await provider.request<Hex>({\n        method: 'eth_chainId',\n      })\n      return Number(chainId)\n    },\n    async getProvider() {\n      if (!walletProvider) {\n        // Unwrapping import for Vite compatibility.\n        // See: https://github.com/vitejs/vite/issues/9703\n        const CoinbaseWalletSDK = await (async () => {\n          const { default: SDK } = await import('cbw-sdk')\n          if (typeof SDK !== 'function' && typeof SDK.default === 'function')\n            return SDK.default\n          return SDK as unknown as typeof SDK.default\n        })()\n\n        sdk = new CoinbaseWalletSDK({ ...parameters, reloadOnDisconnect })\n\n        // Force types to retrieve private `walletExtension` method from the Coinbase Wallet SDK.\n        const walletExtensionChainId = (\n          sdk as unknown as {\n            get walletExtension(): { getChainId(): number } | undefined\n          }\n        ).walletExtension?.getChainId()\n\n        const chain =\n          config.chains.find((chain) =>\n            parameters.chainId\n              ? chain.id === parameters.chainId\n              : chain.id === walletExtensionChainId,\n          ) || config.chains[0]\n        const chainId = parameters.chainId || chain?.id\n        const jsonRpcUrl =\n          parameters.jsonRpcUrl || chain?.rpcUrls.default.http[0]\n\n        walletProvider = sdk.makeWeb3Provider(jsonRpcUrl, chainId)\n      }\n\n      return walletProvider\n    },\n    async isAuthorized() {\n      try {\n        const accounts = await this.getAccounts()\n        return !!accounts.length\n      } catch {\n        return false\n      }\n    },\n    async switchChain({ addEthereumChainParameter, chainId }) {\n      const chain = config.chains.find((chain) => chain.id === chainId)\n      if (!chain) throw new SwitchChainError(new ChainNotConfiguredError())\n\n      const provider = await this.getProvider()\n\n      try {\n        await provider.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{ chainId: numberToHex(chain.id) }],\n        })\n        return chain\n      } catch (error) {\n        // Indicates chain is not added to provider\n        if ((error as ProviderRpcError).code === 4902) {\n          try {\n            let blockExplorerUrls: string[] | undefined\n            if (addEthereumChainParameter?.blockExplorerUrls)\n              blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls\n            else\n              blockExplorerUrls = chain.blockExplorers?.default.url\n                ? [chain.blockExplorers?.default.url]\n                : []\n\n            let rpcUrls: readonly string[]\n            if (addEthereumChainParameter?.rpcUrls?.length)\n              rpcUrls = addEthereumChainParameter.rpcUrls\n            else rpcUrls = [chain.rpcUrls.default?.http[0] ?? '']\n\n            const addEthereumChain = {\n              blockExplorerUrls,\n              chainId: numberToHex(chainId),\n              chainName: addEthereumChainParameter?.chainName ?? chain.name,\n              iconUrls: addEthereumChainParameter?.iconUrls,\n              nativeCurrency:\n                addEthereumChainParameter?.nativeCurrency ??\n                chain.nativeCurrency,\n              rpcUrls,\n            } satisfies AddEthereumChainParameter\n\n            await provider.request({\n              method: 'wallet_addEthereumChain',\n              params: [addEthereumChain],\n            })\n\n            return chain\n          } catch (error) {\n            throw new UserRejectedRequestError(error as Error)\n          }\n        }\n\n        throw new SwitchChainError(error as Error)\n      }\n    },\n    onAccountsChanged(accounts) {\n      if (accounts.length === 0) this.onDisconnect()\n      else\n        config.emitter.emit('change', {\n          accounts: accounts.map((x) => getAddress(x)),\n        })\n    },\n    onChainChanged(chain) {\n      const chainId = Number(chain)\n      config.emitter.emit('change', { chainId })\n    },\n    async onDisconnect(_error) {\n      config.emitter.emit('disconnect')\n\n      const provider = await this.getProvider()\n      if (accountsChanged) {\n        provider.removeListener('accountsChanged', accountsChanged)\n        accountsChanged = undefined\n      }\n      if (chainChanged) {\n        provider.removeListener('chainChanged', chainChanged)\n        chainChanged = undefined\n      }\n      if (disconnect) {\n        provider.removeListener('disconnect', disconnect)\n        disconnect = undefined\n      }\n    },\n  }))\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}