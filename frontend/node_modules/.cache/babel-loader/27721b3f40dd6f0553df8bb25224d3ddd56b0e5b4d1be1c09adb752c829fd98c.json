{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { useAccount, useConnect, useSignMessage, useDisconnect } from \"wagmi\";\nimport { injected } from \"wagmi/connectors\";\nimport axios from \"axios\";\nfunction useAuth() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [session, setSession] = useState({});\n  const {\n    connectAsync\n  } = useConnect();\n  const {\n    disconnectAsync\n  } = useDisconnect();\n  const {\n    isConnected\n  } = useAccount();\n  const {\n    signMessageAsync\n  } = useSignMessage();\n  const ServerUrl = \"http://localhost:4000\";\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleAuth = async () => {\n    console.log(\"handle auth is called\");\n    if (isConnected) {\n      await disconnectAsync();\n    }\n    // enabling the web3 provider metamask\n    const res = await connectAsync({\n      connector: injected({\n        target: 'metaMask'\n      })\n    });\n    const {\n      accounts,\n      chainId\n    } = res;\n    const userData = {\n      address: accounts[0],\n      chain: chainId\n    };\n    const {\n      data\n    } = await axios.post(`${ServerUrl}/request-message`, userData, {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    });\n    const message = data.message;\n    const signature = await signMessageAsync({\n      message\n    });\n    await axios.post(`${ServerUrl}/verify`, {\n      message,\n      signature\n    }, {\n      withCredentials: true\n    } // set cookie from Express server\n    );\n    let authdataToreturn = null;\n    axios(`${ServerUrl}/authenticate`, {\n      withCredentials: true\n    }).then(({\n      data\n    }) => {\n      console.log(\"authenticating with \", data);\n      const {\n        iat,\n        ...authData\n      } = data; // remove unimportant iat value\n      console.log(\"authenticating\");\n      setSession(authData);\n      authdataToreturn = authData;\n    }).catch(err => {\n      console.log(\"error authenticating\");\n      console.log(err);\n      authdataToreturn = null;\n    });\n    return authdataToreturn;\n  };\n  async function signOut() {\n    await axios(`${ServerUrl}/logout`, {\n      withCredentials: true\n    });\n  }\n\n  // Function to log in and set user state\n  const authenticate = /**useCallback(*/async () => {\n    try {\n      const userData = await handleAuth();\n      setTimeout(() => {\n        console.log(\"set user data as \", userData);\n      }, 10000);\n      console.log(\"setting user data as \", userData);\n      setUser(userData);\n      console.log(\"user data is \", user);\n      console.log(\"isAuthenticated is \", isAuthenticated);\n      setIsAuthenticated(true);\n      console.log(\"isAuthenticated is \", isAuthenticated);\n    } catch (error) {\n      console.error('Authentication failed:', error);\n      setIsAuthenticated(false);\n    }\n  }; /** , [handleAuth, isAuthenticated, session, user]);*/\n\n  // Function to log out and clear user state\n  const logout = useCallback(() => {\n    signOut();\n    setUser(null);\n    setIsAuthenticated(false);\n  }, []);\n  return {\n    authenticate,\n    logout,\n    isAuthenticated,\n    user\n  };\n}\n_s(useAuth, \"4amXMuR2s2d7Cg/Jo+Pk/dUafHY=\", false, function () {\n  return [useConnect, useDisconnect, useAccount, useSignMessage];\n});\nexport default useAuth;","map":{"version":3,"names":["useState","useCallback","useAccount","useConnect","useSignMessage","useDisconnect","injected","axios","useAuth","_s","user","setUser","isAuthenticated","setIsAuthenticated","session","setSession","connectAsync","disconnectAsync","isConnected","signMessageAsync","ServerUrl","handleAuth","console","log","res","connector","target","accounts","chainId","userData","address","chain","data","post","headers","message","signature","withCredentials","authdataToreturn","then","iat","authData","catch","err","signOut","authenticate","setTimeout","error","logout"],"sources":["/Users/siddharthpranay/Desktop/projects/Chirping/frontend/src/hooks/useAuth.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\nimport { useAccount, useConnect, useSignMessage, useDisconnect } from \"wagmi\";\nimport { injected } from \"wagmi/connectors\";\nimport axios from \"axios\";\n\nfunction useAuth() {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [session, setSession] = useState({});\n\n\n  const { connectAsync } = useConnect();\n  const { disconnectAsync } = useDisconnect();\n  const { isConnected } = useAccount();\n  const { signMessageAsync } = useSignMessage();\n\n  const ServerUrl = \"http://localhost:4000\";\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleAuth = async () => {\n\n    console.log(\"handle auth is called\");\n    if (isConnected) {\n      await disconnectAsync();\n    }\n    // enabling the web3 provider metamask\n    const res = await connectAsync({\n      connector: injected({ target: 'metaMask'}),\n    });\n\n    const { accounts, chainId } = res;\n\n    const userData = { address: accounts[0], chain: chainId };\n\n    const { data } = await axios.post(\n      `${ServerUrl}/request-message`,\n      userData,\n      {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n      }\n    );\n\n    const message = data.message;\n\n    const signature = await signMessageAsync({ message });\n\n    await axios.post(\n      `${ServerUrl}/verify`,\n      {\n        message,\n        signature,\n      },\n      { withCredentials: true } // set cookie from Express server\n    );\n\n    let authdataToreturn = null;\n\n    axios(`${ServerUrl}/authenticate`, {\n        withCredentials: true,\n      })\n        .then(({ data }) => {\n          console.log(\"authenticating with \", data)\n          const { iat, ...authData } = data; // remove unimportant iat value\n          console.log(\"authenticating\")\n          setSession(authData);\n          authdataToreturn = authData;\n        })\n        .catch((err) => {\n          console.log(\"error authenticating\")\n          console.log(err);\n          authdataToreturn = null;\n        });\n\n        return authdataToreturn\n  };\n\n\n  async function signOut() {\n    await axios(`${ServerUrl}/logout`, {\n      withCredentials: true,\n    });\n\n  }\n\n  // Function to log in and set user state\n  const authenticate = /**useCallback(*/async () => {\n    try {\n      const userData = await handleAuth();\n      setTimeout(() => {\n        console.log(\"set user data as \", userData)\n      }, 10000)\n      console.log(\"setting user data as \", userData)\n      setUser(userData);\n      console.log(\"user data is \", user)\n      console.log(\"isAuthenticated is \", isAuthenticated)\n      setIsAuthenticated(true);\n      console.log(\"isAuthenticated is \", isAuthenticated)\n    } catch (error) {\n      console.error('Authentication failed:', error);\n      setIsAuthenticated(false);\n    }\n  }/** , [handleAuth, isAuthenticated, session, user]);*/\n\n  // Function to log out and clear user state\n  const logout = useCallback(() => {\n    signOut();\n    setUser(null);\n    setIsAuthenticated(false);\n  }, []);\n\n  return { authenticate, logout, isAuthenticated, user };\n}\n\nexport default useAuth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}