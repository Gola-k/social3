{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthpranay/Desktop/projects/Chirping/frontend/src/components/Signin.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { useAccount, useConnect, useSignMessage, useDisconnect } from \"wagmi\";\nimport { injected } from \"wagmi/connectors\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignIn() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    connectAsync\n  } = useConnect();\n  const {\n    disconnectAsync\n  } = useDisconnect();\n  const {\n    isConnected\n  } = useAccount();\n  const {\n    signMessageAsync\n  } = useSignMessage();\n  const ServerUrl = \"http://localhost:4000\";\n  const handleAuth = async () => {\n    //disconnects the web3 provider if it's already active\n    console.log(\"isconnected\", isConnected);\n    if (isConnected) {\n      await disconnectAsync();\n    }\n    // enabling the web3 provider metamask\n    const res = await connectAsync({\n      connector: injected({\n        target: 'metaMask'\n      })\n    });\n    console.log(\"res\", res);\n    const account = res.address;\n    const userData = {\n      address: account,\n      chain: 97\n    };\n    console.log(userData);\n    // making a post request to our 'request-message' endpoint\n    const {\n      data\n    } = await axios.post(`${ServerUrl}/request-message`, userData, {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    });\n    const message = data.message;\n    // signing the received message via metamask\n    const signature = await signMessageAsync({\n      message\n    });\n    await axios.post(`${ServerUrl}/verify`, {\n      message,\n      signature\n    }, {\n      withCredentials: true\n    } // set cookie from Express server\n    );\n\n    // redirect to /user\n    navigate(\"/user\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Web3 Authentication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAuth(),\n      children: \"Authenticate via MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(SignIn, \"JrFjZMKci5C17atZS0viSvKtjDA=\", false, function () {\n  return [useNavigate, useConnect, useDisconnect, useAccount, useSignMessage];\n});\n_c = SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["useNavigate","useAccount","useConnect","useSignMessage","useDisconnect","injected","axios","jsxDEV","_jsxDEV","SignIn","_s","navigate","connectAsync","disconnectAsync","isConnected","signMessageAsync","ServerUrl","handleAuth","console","log","res","connector","target","account","address","userData","chain","data","post","headers","message","signature","withCredentials","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/siddharthpranay/Desktop/projects/Chirping/frontend/src/components/Signin.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\n\nimport { useAccount, useConnect, useSignMessage, useDisconnect } from \"wagmi\";\nimport { injected } from \"wagmi/connectors\";\nimport axios from \"axios\";\n\nexport default function SignIn() {\n  const navigate = useNavigate();\n\n  const { connectAsync } = useConnect();\n  const { disconnectAsync } = useDisconnect();\n  const { isConnected } = useAccount();\n  const { signMessageAsync } = useSignMessage();\n\n  const ServerUrl = \"http://localhost:4000\";\n\n  const handleAuth = async () => {\n    //disconnects the web3 provider if it's already active\n    console.log(\"isconnected\", isConnected);\n    if (isConnected) {\n      await disconnectAsync();\n    }\n    // enabling the web3 provider metamask\n    const res = await connectAsync({\n      connector: injected({ target: 'metaMask'}),\n    });\n\n    console.log(\"res\", res);\n\n    const account = res.address;\n\n    const userData = { address: account, chain: 97 };\n\n    console.log(userData);\n    // making a post request to our 'request-message' endpoint\n    const { data } = await axios.post(\n      `${ServerUrl}/request-message`,\n      userData,\n      {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n      }\n    );\n    const message = data.message;\n    // signing the received message via metamask\n    const signature = await signMessageAsync({ message });\n\n    await axios.post(\n      `${ServerUrl}/verify`,\n      {\n        message,\n        signature,\n      },\n      { withCredentials: true } // set cookie from Express server\n    );\n\n    // redirect to /user\n    navigate(\"/user\");\n  };\n\n  return (\n    <div>\n      <h3>Web3 Authentication</h3>\n      <button onClick={() => handleAuth()}>Authenticate via MetaMask</button>\n    </div>\n  );\n}"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,UAAU,EAAEC,UAAU,EAAEC,cAAc,EAAEC,aAAa,QAAQ,OAAO;AAC7E,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAM;IAAEY;EAAa,CAAC,GAAGV,UAAU,CAAC,CAAC;EACrC,MAAM;IAAEW;EAAgB,CAAC,GAAGT,aAAa,CAAC,CAAC;EAC3C,MAAM;IAAEU;EAAY,CAAC,GAAGb,UAAU,CAAC,CAAC;EACpC,MAAM;IAAEc;EAAiB,CAAC,GAAGZ,cAAc,CAAC,CAAC;EAE7C,MAAMa,SAAS,GAAG,uBAAuB;EAEzC,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B;IACAC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEL,WAAW,CAAC;IACvC,IAAIA,WAAW,EAAE;MACf,MAAMD,eAAe,CAAC,CAAC;IACzB;IACA;IACA,MAAMO,GAAG,GAAG,MAAMR,YAAY,CAAC;MAC7BS,SAAS,EAAEhB,QAAQ,CAAC;QAAEiB,MAAM,EAAE;MAAU,CAAC;IAC3C,CAAC,CAAC;IAEFJ,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEC,GAAG,CAAC;IAEvB,MAAMG,OAAO,GAAGH,GAAG,CAACI,OAAO;IAE3B,MAAMC,QAAQ,GAAG;MAAED,OAAO,EAAED,OAAO;MAAEG,KAAK,EAAE;IAAG,CAAC;IAEhDR,OAAO,CAACC,GAAG,CAACM,QAAQ,CAAC;IACrB;IACA,MAAM;MAAEE;IAAK,CAAC,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAC/B,GAAGZ,SAAS,kBAAkB,EAC9BS,QAAQ,EACR;MACEI,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IACD,MAAMC,OAAO,GAAGH,IAAI,CAACG,OAAO;IAC5B;IACA,MAAMC,SAAS,GAAG,MAAMhB,gBAAgB,CAAC;MAAEe;IAAQ,CAAC,CAAC;IAErD,MAAMxB,KAAK,CAACsB,IAAI,CACd,GAAGZ,SAAS,SAAS,EACrB;MACEc,OAAO;MACPC;IACF,CAAC,EACD;MAAEC,eAAe,EAAE;IAAK,CAAC,CAAC;IAC5B,CAAC;;IAED;IACArB,QAAQ,CAAC,OAAO,CAAC;EACnB,CAAC;EAED,oBACEH,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B7B,OAAA;MAAQ8B,OAAO,EAAEA,CAAA,KAAMrB,UAAU,CAAC,CAAE;MAAAgB,QAAA,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEV;AAAC3B,EAAA,CA7DuBD,MAAM;EAAA,QACXT,WAAW,EAEHE,UAAU,EACPE,aAAa,EACjBH,UAAU,EACLE,cAAc;AAAA;AAAAoC,EAAA,GANrB9B,MAAM;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}