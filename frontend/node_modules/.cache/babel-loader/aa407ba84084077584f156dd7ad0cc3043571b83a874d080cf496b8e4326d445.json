{"ast":null,"code":"'use client';\n\nimport { deepEqual } from '@wagmi/core/internal';\nimport { useRef } from 'react';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector.js';\nconst isPlainObject = obj => typeof obj === 'object' && !Array.isArray(obj);\nexport function useSyncExternalStoreWithTracked(subscribe, getSnapshot) {\n  let getServerSnapshot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getSnapshot;\n  let isEqual = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : deepEqual;\n  const trackedKeys = useRef([]);\n  const result = useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, x => x, (a, b) => {\n    if (isPlainObject(a) && isPlainObject(b) && trackedKeys.current.length) {\n      for (const key of trackedKeys.current) {\n        const equal = isEqual(a[key], b[key]);\n        if (!equal) return false;\n      }\n      return true;\n    }\n    return isEqual(a, b);\n  });\n  if (isPlainObject(result)) {\n    const trackedResult = {\n      ...result\n    };\n    let properties = {};\n    for (const [key, value] of Object.entries(trackedResult)) {\n      properties = {\n        ...properties,\n        [key]: {\n          configurable: false,\n          enumerable: true,\n          get: () => {\n            if (!trackedKeys.current.includes(key)) {\n              trackedKeys.current.push(key);\n            }\n            return value;\n          }\n        }\n      };\n    }\n    Object.defineProperties(trackedResult, properties);\n    return trackedResult;\n  }\n  return result;\n}","map":{"version":3,"names":["deepEqual","useRef","useSyncExternalStoreWithSelector","isPlainObject","obj","Array","isArray","useSyncExternalStoreWithTracked","subscribe","getSnapshot","getServerSnapshot","arguments","length","undefined","isEqual","trackedKeys","result","x","a","b","current","key","equal","trackedResult","properties","value","Object","entries","configurable","enumerable","get","includes","push","defineProperties"],"sources":["/Users/siddharthpranay/Desktop/projects/Chirping/frontend/node_modules/wagmi/src/hooks/useSyncExternalStoreWithTracked.ts"],"sourcesContent":["'use client'\n\nimport { deepEqual } from '@wagmi/core/internal'\nimport { useRef } from 'react'\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector.js'\n\nconst isPlainObject = (obj: unknown) =>\n  typeof obj === 'object' && !Array.isArray(obj)\n\nexport function useSyncExternalStoreWithTracked<\n  snapshot extends selection,\n  selection = snapshot,\n>(\n  subscribe: (onStoreChange: () => void) => () => void,\n  getSnapshot: () => snapshot,\n  getServerSnapshot: undefined | null | (() => snapshot) = getSnapshot,\n  isEqual: (a: selection, b: selection) => boolean = deepEqual,\n) {\n  const trackedKeys = useRef<string[]>([])\n  const result = useSyncExternalStoreWithSelector(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot,\n    (x) => x,\n    (a, b) => {\n      if (isPlainObject(a) && isPlainObject(b) && trackedKeys.current.length) {\n        for (const key of trackedKeys.current) {\n          const equal = isEqual(\n            (a as { [_a: string]: any })[key],\n            (b as { [_b: string]: any })[key],\n          )\n          if (!equal) return false\n        }\n        return true\n      }\n      return isEqual(a, b)\n    },\n  )\n\n  if (isPlainObject(result)) {\n    const trackedResult = { ...result }\n    let properties = {}\n    for (const [key, value] of Object.entries(\n      trackedResult as { [key: string]: any },\n    )) {\n      properties = {\n        ...properties,\n        [key]: {\n          configurable: false,\n          enumerable: true,\n          get: () => {\n            if (!trackedKeys.current.includes(key)) {\n              trackedKeys.current.push(key)\n            }\n            return value\n          },\n        },\n      }\n    }\n    Object.defineProperties(trackedResult, properties)\n    return trackedResult\n  }\n\n  return result\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,SAAS,QAAQ,sBAAsB;AAChD,SAASC,MAAM,QAAQ,OAAO;AAC9B,SAASC,gCAAgC,QAAQ,+CAA+C;AAEhG,MAAMC,aAAa,GAAIC,GAAY,IACjC,OAAOA,GAAG,KAAK,QAAQ,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC;AAEhD,OAAM,SAAUG,+BAA+BA,CAI7CC,SAAoD,EACpDC,WAA2B,EAEiC;EAAA,IAD5DC,iBAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAyDF,WAAW;EAAA,IACpEK,OAAA,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAmDX,SAAS;EAE5D,MAAMe,WAAW,GAAGd,MAAM,CAAW,EAAE,CAAC;EACxC,MAAMe,MAAM,GAAGd,gCAAgC,CAC7CM,SAAS,EACTC,WAAW,EACXC,iBAAiB,EAChBO,CAAC,IAAKA,CAAC,EACR,CAACC,CAAC,EAAEC,CAAC,KAAI;IACP,IAAIhB,aAAa,CAACe,CAAC,CAAC,IAAIf,aAAa,CAACgB,CAAC,CAAC,IAAIJ,WAAW,CAACK,OAAO,CAACR,MAAM,EAAE;MACtE,KAAK,MAAMS,GAAG,IAAIN,WAAW,CAACK,OAAO,EAAE;QACrC,MAAME,KAAK,GAAGR,OAAO,CAClBI,CAA2B,CAACG,GAAG,CAAC,EAChCF,CAA2B,CAACE,GAAG,CAAC,CAClC;QACD,IAAI,CAACC,KAAK,EAAE,OAAO,KAAK;MAC1B;MACA,OAAO,IAAI;IACb;IACA,OAAOR,OAAO,CAACI,CAAC,EAAEC,CAAC,CAAC;EACtB,CAAC,CACF;EAED,IAAIhB,aAAa,CAACa,MAAM,CAAC,EAAE;IACzB,MAAMO,aAAa,GAAG;MAAE,GAAGP;IAAM,CAAE;IACnC,IAAIQ,UAAU,GAAG,EAAE;IACnB,KAAK,MAAM,CAACH,GAAG,EAAEI,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CACvCJ,aAAuC,CACxC,EAAE;MACDC,UAAU,GAAG;QACX,GAAGA,UAAU;QACb,CAACH,GAAG,GAAG;UACLO,YAAY,EAAE,KAAK;UACnBC,UAAU,EAAE,IAAI;UAChBC,GAAG,EAAEA,CAAA,KAAK;YACR,IAAI,CAACf,WAAW,CAACK,OAAO,CAACW,QAAQ,CAACV,GAAG,CAAC,EAAE;cACtCN,WAAW,CAACK,OAAO,CAACY,IAAI,CAACX,GAAG,CAAC;YAC/B;YACA,OAAOI,KAAK;UACd;;OAEH;IACH;IACAC,MAAM,CAACO,gBAAgB,CAACV,aAAa,EAAEC,UAAU,CAAC;IAClD,OAAOD,aAAa;EACtB;EAEA,OAAOP,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}