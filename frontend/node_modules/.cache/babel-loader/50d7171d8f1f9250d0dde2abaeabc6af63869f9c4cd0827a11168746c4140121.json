{"ast":null,"code":"function wrapToPromise(value) {\n  if (!value || typeof value.then !== \"function\") {\n    return Promise.resolve(value);\n  }\n  return value;\n}\nfunction asyncCall(function_) {\n  try {\n    for (var _len = arguments.length, arguments_ = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      arguments_[_key - 1] = arguments[_key];\n    }\n    return wrapToPromise(function_(...arguments_));\n  } catch (error) {\n    return Promise.reject(error);\n  }\n}\nfunction isPrimitive(value) {\n  const type = typeof value;\n  return value === null || type !== \"object\" && type !== \"function\";\n}\nfunction isPureObject(value) {\n  const proto = Object.getPrototypeOf(value);\n  return !proto || proto.isPrototypeOf(Object);\n}\nfunction stringify(value) {\n  if (isPrimitive(value)) {\n    return String(value);\n  }\n  if (isPureObject(value) || Array.isArray(value)) {\n    return JSON.stringify(value);\n  }\n  if (typeof value.toJSON === \"function\") {\n    return stringify(value.toJSON());\n  }\n  throw new Error(\"[unstorage] Cannot stringify value!\");\n}\nfunction checkBufferSupport() {\n  if (typeof Buffer === void 0) {\n    throw new TypeError(\"[unstorage] Buffer is not supported!\");\n  }\n}\nconst BASE64_PREFIX = \"base64:\";\nfunction serializeRaw(value) {\n  if (typeof value === \"string\") {\n    return value;\n  }\n  checkBufferSupport();\n  const base64 = Buffer.from(value).toString(\"base64\");\n  return BASE64_PREFIX + base64;\n}\nfunction deserializeRaw(value) {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  if (!value.startsWith(BASE64_PREFIX)) {\n    return value;\n  }\n  checkBufferSupport();\n  return Buffer.from(value.slice(BASE64_PREFIX.length), \"base64\");\n}\nconst storageKeyProperties = [\"hasItem\", \"getItem\", \"getItemRaw\", \"setItem\", \"setItemRaw\", \"removeItem\", \"getMeta\", \"setMeta\", \"removeMeta\", \"getKeys\", \"clear\", \"mount\", \"unmount\"];\nfunction prefixStorage(storage, base) {\n  base = normalizeBaseKey(base);\n  if (!base) {\n    return storage;\n  }\n  const nsStorage = {\n    ...storage\n  };\n  for (const property of storageKeyProperties) {\n    nsStorage[property] = function () {\n      let key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n      return (\n        // @ts-ignore\n        storage[property](base + key, ...args)\n      );\n    };\n  }\n  nsStorage.getKeys = function () {\n    let key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    for (var _len3 = arguments.length, arguments_ = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      arguments_[_key3 - 1] = arguments[_key3];\n    }\n    return storage.getKeys(base + key, ...arguments_).then(keys => keys.map(key2 => key2.slice(base.length)));\n  };\n  return nsStorage;\n}\nfunction normalizeKey(key) {\n  if (!key) {\n    return \"\";\n  }\n  return key.split(\"?\")[0].replace(/[/\\\\]/g, \":\").replace(/:+/g, \":\").replace(/^:|:$/g, \"\");\n}\nfunction joinKeys() {\n  for (var _len4 = arguments.length, keys = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    keys[_key4] = arguments[_key4];\n  }\n  return normalizeKey(keys.join(\":\"));\n}\nfunction normalizeBaseKey(base) {\n  base = normalizeKey(base);\n  return base ? base + \":\" : \"\";\n}\nexport { normalizeKey as a, asyncCall as b, serializeRaw as c, deserializeRaw as d, joinKeys as j, normalizeBaseKey as n, prefixStorage as p, stringify as s };","map":{"version":3,"names":["wrapToPromise","value","then","Promise","resolve","asyncCall","function_","_len","arguments","length","arguments_","Array","_key","error","reject","isPrimitive","type","isPureObject","proto","Object","getPrototypeOf","isPrototypeOf","stringify","String","isArray","JSON","toJSON","Error","checkBufferSupport","Buffer","TypeError","BASE64_PREFIX","serializeRaw","base64","from","toString","deserializeRaw","startsWith","slice","storageKeyProperties","prefixStorage","storage","base","normalizeBaseKey","nsStorage","property","key","undefined","_len2","args","_key2","getKeys","_len3","_key3","keys","map","key2","normalizeKey","split","replace","joinKeys","_len4","_key4","join","a","b","c","d","j","n","p","s"],"sources":["/Users/siddharthpranay/Desktop/projects/Chirping/frontend/node_modules/unstorage/dist/shared/unstorage.8581f561.mjs"],"sourcesContent":["function wrapToPromise(value) {\n  if (!value || typeof value.then !== \"function\") {\n    return Promise.resolve(value);\n  }\n  return value;\n}\nfunction asyncCall(function_, ...arguments_) {\n  try {\n    return wrapToPromise(function_(...arguments_));\n  } catch (error) {\n    return Promise.reject(error);\n  }\n}\nfunction isPrimitive(value) {\n  const type = typeof value;\n  return value === null || type !== \"object\" && type !== \"function\";\n}\nfunction isPureObject(value) {\n  const proto = Object.getPrototypeOf(value);\n  return !proto || proto.isPrototypeOf(Object);\n}\nfunction stringify(value) {\n  if (isPrimitive(value)) {\n    return String(value);\n  }\n  if (isPureObject(value) || Array.isArray(value)) {\n    return JSON.stringify(value);\n  }\n  if (typeof value.toJSON === \"function\") {\n    return stringify(value.toJSON());\n  }\n  throw new Error(\"[unstorage] Cannot stringify value!\");\n}\nfunction checkBufferSupport() {\n  if (typeof Buffer === void 0) {\n    throw new TypeError(\"[unstorage] Buffer is not supported!\");\n  }\n}\nconst BASE64_PREFIX = \"base64:\";\nfunction serializeRaw(value) {\n  if (typeof value === \"string\") {\n    return value;\n  }\n  checkBufferSupport();\n  const base64 = Buffer.from(value).toString(\"base64\");\n  return BASE64_PREFIX + base64;\n}\nfunction deserializeRaw(value) {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  if (!value.startsWith(BASE64_PREFIX)) {\n    return value;\n  }\n  checkBufferSupport();\n  return Buffer.from(value.slice(BASE64_PREFIX.length), \"base64\");\n}\n\nconst storageKeyProperties = [\n  \"hasItem\",\n  \"getItem\",\n  \"getItemRaw\",\n  \"setItem\",\n  \"setItemRaw\",\n  \"removeItem\",\n  \"getMeta\",\n  \"setMeta\",\n  \"removeMeta\",\n  \"getKeys\",\n  \"clear\",\n  \"mount\",\n  \"unmount\"\n];\nfunction prefixStorage(storage, base) {\n  base = normalizeBaseKey(base);\n  if (!base) {\n    return storage;\n  }\n  const nsStorage = { ...storage };\n  for (const property of storageKeyProperties) {\n    nsStorage[property] = (key = \"\", ...args) => (\n      // @ts-ignore\n      storage[property](base + key, ...args)\n    );\n  }\n  nsStorage.getKeys = (key = \"\", ...arguments_) => storage.getKeys(base + key, ...arguments_).then((keys) => keys.map((key2) => key2.slice(base.length)));\n  return nsStorage;\n}\nfunction normalizeKey(key) {\n  if (!key) {\n    return \"\";\n  }\n  return key.split(\"?\")[0].replace(/[/\\\\]/g, \":\").replace(/:+/g, \":\").replace(/^:|:$/g, \"\");\n}\nfunction joinKeys(...keys) {\n  return normalizeKey(keys.join(\":\"));\n}\nfunction normalizeBaseKey(base) {\n  base = normalizeKey(base);\n  return base ? base + \":\" : \"\";\n}\n\nexport { normalizeKey as a, asyncCall as b, serializeRaw as c, deserializeRaw as d, joinKeys as j, normalizeBaseKey as n, prefixStorage as p, stringify as s };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}