{"ast":null,"code":"'use client';\n\nimport { getPublicClient, watchPublicClient } from '@wagmi/core';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector.js';\nimport { useConfig } from './useConfig.js';\n/** https://wagmi.sh/react/api/hooks/usePublicClient */\nexport function usePublicClient() {\n  let parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const config = useConfig(parameters);\n  return useSyncExternalStoreWithSelector(onChange => watchPublicClient(config, {\n    onChange\n  }), () => getPublicClient(config, parameters), () => getPublicClient(config, parameters), x => x, (a, b) => a?.uid === b?.uid);\n}","map":{"version":3,"names":["getPublicClient","watchPublicClient","useSyncExternalStoreWithSelector","useConfig","usePublicClient","parameters","arguments","length","undefined","config","onChange","x","a","b","uid"],"sources":["/Users/siddharthpranay/Desktop/projects/Chirping/frontend/node_modules/wagmi/src/hooks/usePublicClient.ts"],"sourcesContent":["'use client'\n\nimport {\n  type Config,\n  type GetPublicClientParameters,\n  type GetPublicClientReturnType,\n  type ResolvedRegister,\n  getPublicClient,\n  watchPublicClient,\n} from '@wagmi/core'\nimport type { Compute } from '@wagmi/core/internal'\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector.js'\n\nimport type { ConfigParameter } from '../types/properties.js'\nimport { useConfig } from './useConfig.js'\n\nexport type UsePublicClientParameters<\n  config extends Config = Config,\n  chainId extends config['chains'][number]['id'] | number | undefined =\n    | config['chains'][number]['id']\n    | undefined,\n> = Compute<\n  GetPublicClientParameters<config, chainId> & ConfigParameter<config>\n>\n\nexport type UsePublicClientReturnType<\n  config extends Config = Config,\n  chainId extends config['chains'][number]['id'] | number | undefined =\n    | config['chains'][number]['id']\n    | undefined,\n> = GetPublicClientReturnType<config, chainId>\n\n/** https://wagmi.sh/react/api/hooks/usePublicClient */\nexport function usePublicClient<\n  config extends Config = ResolvedRegister['config'],\n  chainId extends config['chains'][number]['id'] | number | undefined =\n    | config['chains'][number]['id']\n    | undefined,\n>(\n  parameters: UsePublicClientParameters<config, chainId> = {},\n): UsePublicClientReturnType<config, chainId> {\n  const config = useConfig(parameters)\n\n  return useSyncExternalStoreWithSelector(\n    (onChange) => watchPublicClient(config, { onChange }),\n    () => getPublicClient(config, parameters),\n    () => getPublicClient(config, parameters),\n    (x) => x,\n    (a, b) => a?.uid === b?.uid,\n  ) as any\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,SAKEA,eAAe,EACfC,iBAAiB,QACZ,aAAa;AAEpB,SAASC,gCAAgC,QAAQ,+CAA+C;AAGhG,SAASC,SAAS,QAAQ,gBAAgB;AAkB1C;AACA,OAAM,SAAUC,eAAeA,CAAA,EAM8B;EAAA,IAA3DC,UAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAyD,EAAE;EAE3D,MAAMG,MAAM,GAAGN,SAAS,CAACE,UAAU,CAAC;EAEpC,OAAOH,gCAAgC,CACpCQ,QAAQ,IAAKT,iBAAiB,CAACQ,MAAM,EAAE;IAAEC;EAAQ,CAAE,CAAC,EACrD,MAAMV,eAAe,CAACS,MAAM,EAAEJ,UAAU,CAAC,EACzC,MAAML,eAAe,CAACS,MAAM,EAAEJ,UAAU,CAAC,EACxCM,CAAC,IAAKA,CAAC,EACR,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,EAAEE,GAAG,KAAKD,CAAC,EAAEC,GAAG,CACrB;AACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}