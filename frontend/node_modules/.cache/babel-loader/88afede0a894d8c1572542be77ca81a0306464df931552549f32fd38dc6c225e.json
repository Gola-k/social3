{"ast":null,"code":"var __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _BaseError_instances, _BaseError_walk;\nimport { getVersion } from '../utils/getVersion.js';\nexport class BaseError extends Error {\n  get docsBaseUrl() {\n    return 'https://wagmi.sh/core';\n  }\n  get version() {\n    return getVersion();\n  }\n  constructor(shortMessage) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    _BaseError_instances.add(this);\n    Object.defineProperty(this, \"details\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"docsPath\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"metaMessages\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shortMessage\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'WagmiCoreError'\n    });\n    const details = options.cause instanceof BaseError ? options.cause.details : options.cause?.message ? options.cause.message : options.details;\n    const docsPath = options.cause instanceof BaseError ? options.cause.docsPath || options.docsPath : options.docsPath;\n    this.message = [shortMessage || 'An error occurred.', '', ...(options.metaMessages ? [...options.metaMessages, ''] : []), ...(docsPath ? [`Docs: ${this.docsBaseUrl}${docsPath}.html${options.docsSlug ? `#${options.docsSlug}` : ''}`] : []), ...(details ? [`Details: ${details}`] : []), `Version: ${this.version}`].join('\\n');\n    if (options.cause) this.cause = options.cause;\n    this.details = details;\n    this.docsPath = docsPath;\n    this.metaMessages = options.metaMessages;\n    this.shortMessage = shortMessage;\n  }\n  walk(fn) {\n    return __classPrivateFieldGet(this, _BaseError_instances, \"m\", _BaseError_walk).call(this, this, fn);\n  }\n}\n_BaseError_instances = new WeakSet(), _BaseError_walk = function _BaseError_walk(err, fn) {\n  if (fn?.(err)) return err;\n  if (err.cause) return __classPrivateFieldGet(this, _BaseError_instances, \"m\", _BaseError_walk).call(this, err.cause, fn);\n  return err;\n};","map":{"version":3,"names":["getVersion","BaseError","Error","docsBaseUrl","version","constructor","shortMessage","options","arguments","length","undefined","Object","defineProperty","details","cause","message","docsPath","metaMessages","docsSlug","join","walk","fn","__classPrivateFieldGet","_BaseError_instances","_BaseError_walk","call","err"],"sources":["/Users/siddharthpranay/Desktop/projects/Chirping/frontend/node_modules/@wagmi/core/src/errors/base.ts"],"sourcesContent":["import type { Compute, OneOf } from '../types/utils.js'\nimport { getVersion } from '../utils/getVersion.js'\n\nexport type ErrorType<name extends string = 'Error'> = Error & { name: name }\n\ntype BaseErrorOptions = Compute<\n  OneOf<{ details?: string | undefined } | { cause: BaseError | Error }> & {\n    docsPath?: string | undefined\n    docsSlug?: string | undefined\n    metaMessages?: string[] | undefined\n  }\n>\n\nexport type BaseErrorType = BaseError & { name: 'WagmiCoreError' }\nexport class BaseError extends Error {\n  details: string\n  docsPath?: string | undefined\n  metaMessages?: string[] | undefined\n  shortMessage: string\n\n  override name = 'WagmiCoreError'\n  get docsBaseUrl() {\n    return 'https://wagmi.sh/core'\n  }\n  get version() {\n    return getVersion()\n  }\n\n  constructor(shortMessage: string, options: BaseErrorOptions = {}) {\n    super()\n\n    const details =\n      options.cause instanceof BaseError\n        ? options.cause.details\n        : options.cause?.message\n          ? options.cause.message\n          : options.details!\n    const docsPath =\n      options.cause instanceof BaseError\n        ? options.cause.docsPath || options.docsPath\n        : options.docsPath\n\n    this.message = [\n      shortMessage || 'An error occurred.',\n      '',\n      ...(options.metaMessages ? [...options.metaMessages, ''] : []),\n      ...(docsPath\n        ? [\n            `Docs: ${this.docsBaseUrl}${docsPath}.html${\n              options.docsSlug ? `#${options.docsSlug}` : ''\n            }`,\n          ]\n        : []),\n      ...(details ? [`Details: ${details}`] : []),\n      `Version: ${this.version}`,\n    ].join('\\n')\n\n    if (options.cause) this.cause = options.cause\n    this.details = details\n    this.docsPath = docsPath\n    this.metaMessages = options.metaMessages\n    this.shortMessage = shortMessage\n  }\n\n  walk(fn?: (err: unknown) => boolean) {\n    return this.#walk(this, fn)\n  }\n\n  #walk(err: unknown, fn?: (err: unknown) => boolean): unknown {\n    if (fn?.(err)) return err\n    if ((err as Error).cause) return this.#walk((err as Error).cause, fn)\n    return err\n  }\n}\n"],"mappings":";;;;;;AACA,SAASA,UAAU,QAAQ,wBAAwB;AAanD,OAAM,MAAOC,SAAU,SAAQC,KAAK;EAOlC,IAAIC,WAAWA,CAAA;IACb,OAAO,uBAAuB;EAChC;EACA,IAAIC,OAAOA,CAAA;IACT,OAAOJ,UAAU,EAAE;EACrB;EAEAK,YAAYC,YAAoB,EAAgC;IAAA,IAA9BC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA4B,EAAE;IAC9D,KAAK,EAAE;;IAdTG,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IAESD,MAAA,CAAAC,cAAA;;;;aAAO;;IAWd,MAAMC,OAAO,GACXN,OAAO,CAACO,KAAK,YAAYb,SAAS,GAC9BM,OAAO,CAACO,KAAK,CAACD,OAAO,GACrBN,OAAO,CAACO,KAAK,EAAEC,OAAO,GACpBR,OAAO,CAACO,KAAK,CAACC,OAAO,GACrBR,OAAO,CAACM,OAAQ;IACxB,MAAMG,QAAQ,GACZT,OAAO,CAACO,KAAK,YAAYb,SAAS,GAC9BM,OAAO,CAACO,KAAK,CAACE,QAAQ,IAAIT,OAAO,CAACS,QAAQ,GAC1CT,OAAO,CAACS,QAAQ;IAEtB,IAAI,CAACD,OAAO,GAAG,CACbT,YAAY,IAAI,oBAAoB,EACpC,EAAE,EACF,IAAIC,OAAO,CAACU,YAAY,GAAG,CAAC,GAAGV,OAAO,CAACU,YAAY,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAC9D,IAAID,QAAQ,GACR,CACE,SAAS,IAAI,CAACb,WAAW,GAAGa,QAAQ,QAClCT,OAAO,CAACW,QAAQ,GAAG,IAAIX,OAAO,CAACW,QAAQ,EAAE,GAAG,EAC9C,EAAE,CACH,GACD,EAAE,CAAC,EACP,IAAIL,OAAO,GAAG,CAAC,YAAYA,OAAO,EAAE,CAAC,GAAG,EAAE,CAAC,EAC3C,YAAY,IAAI,CAACT,OAAO,EAAE,CAC3B,CAACe,IAAI,CAAC,IAAI,CAAC;IAEZ,IAAIZ,OAAO,CAACO,KAAK,EAAE,IAAI,CAACA,KAAK,GAAGP,OAAO,CAACO,KAAK;IAC7C,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACG,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,YAAY,GAAGV,OAAO,CAACU,YAAY;IACxC,IAAI,CAACX,YAAY,GAAGA,YAAY;EAClC;EAEAc,IAAIA,CAACC,EAA8B;IACjC,OAAOC,sBAAA,KAAI,EAAAC,oBAAA,OAAAC,eAAA,CAAM,CAAAC,IAAA,CAAV,IAAI,EAAO,IAAI,EAAEJ,EAAE,CAAC;EAC7B;;iFAEMK,GAAY,EAAEL,EAA8B;EAChD,IAAIA,EAAE,GAAGK,GAAG,CAAC,EAAE,OAAOA,GAAG;EACzB,IAAKA,GAAa,CAACZ,KAAK,EAAE,OAAOQ,sBAAA,KAAI,EAAAC,oBAAA,OAAAC,eAAA,CAAM,CAAAC,IAAA,CAAV,IAAI,EAAQC,GAAa,CAACZ,KAAK,EAAEO,EAAE,CAAC;EACrE,OAAOK,GAAG;AACZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}